# Generated by Django 4.1.7 on 2023-03-12 11:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Facility",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "facility_parent_id",
                    models.IntegerField(
                        verbose_name="Идентификатор родительского объекта"
                    ),
                ),
                (
                    "facility_type_id",
                    models.IntegerField(verbose_name="Идентификатор типа объекта"),
                ),
                (
                    "field_id",
                    models.IntegerField(verbose_name="Идентификатор месторождения"),
                ),
                ("cluster_id", models.IntegerField(verbose_name="Идентификатор куста")),
                (
                    "facility_name",
                    models.CharField(
                        max_length=40, unique=True, verbose_name="Название объекта"
                    ),
                ),
                (
                    "facility_process_rate",
                    models.SmallIntegerField(
                        default="30", verbose_name="Период обновления"
                    ),
                ),
                (
                    "facility_position",
                    models.IntegerField(unique=True, verbose_name="Позиция"),
                ),
                ("facility_coord_ltd", models.FloatField(verbose_name="Широта")),
                ("facility_coord_lng", models.FloatField(verbose_name="Долгота")),
                (
                    "script_id",
                    models.IntegerField(
                        verbose_name="Идентификатор на вид обработки в интерфейсе"
                    ),
                ),
                (
                    "facility_actual",
                    models.BooleanField(default=1, verbose_name="Актуальность объекта"),
                ),
                (
                    "facility_mode_id",
                    models.IntegerField(
                        default="1",
                        help_text="1 - Актуальный, 2 - Тест, 3 - Не актуальный",
                        verbose_name="Режим объекта",
                    ),
                ),
                (
                    "dept_id",
                    models.IntegerField(
                        verbose_name="Привязка к подразделению (месторождению)"
                    ),
                ),
                (
                    "facility_create_date",
                    models.DateTimeField(
                        default="01-01-1999", verbose_name="Дата заведения объекта"
                    ),
                ),
            ],
            options={
                "verbose_name": "объект",
                "verbose_name_plural": "объекты",
            },
        ),
        migrations.CreateModel(
            name="FacilityType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "facility_type_sysname",
                    models.CharField(
                        max_length=40, verbose_name="Системное имя типа объекта"
                    ),
                ),
                (
                    "facility_type_class",
                    models.CharField(max_length=255, verbose_name="Класс типа объекта"),
                ),
                (
                    "facility_type_name",
                    models.CharField(max_length=255, verbose_name="Имя типа объекта"),
                ),
                (
                    "node_type_id",
                    models.IntegerField(verbose_name="Идентификатор типа узла"),
                ),
                (
                    "event_category_mast",
                    models.BigIntegerField(verbose_name="Битовая маска"),
                ),
                (
                    "facility_type_sname",
                    models.CharField(
                        max_length=40, verbose_name="Сокращенное имя типа объекта"
                    ),
                ),
            ],
            options={
                "verbose_name": "тип объекта",
                "verbose_name_plural": "типы объекта",
            },
        ),
        migrations.CreateModel(
            name="Form",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "form_class",
                    models.CharField(max_length=255, verbose_name="Класс формы"),
                ),
                (
                    "form_name",
                    models.CharField(max_length=40, verbose_name="Название формы"),
                ),
                ("form_row", models.BooleanField(verbose_name="Строка формы")),
                (
                    "form_image_index",
                    models.IntegerField(verbose_name="Идентификатор изображения формы"),
                ),
                (
                    "form_desc",
                    models.CharField(max_length=255, verbose_name="Описание формы"),
                ),
                ("form_active", models.BooleanField(verbose_name="Форма активна")),
                (
                    "form_settings",
                    models.CharField(max_length=1000, verbose_name="Настройки формы"),
                ),
                (
                    "is_facility_main_form",
                    models.BooleanField(verbose_name="Основная форма объекта"),
                ),
            ],
            options={
                "verbose_name": "форма",
                "verbose_name_plural": "формы",
            },
        ),
        migrations.CreateModel(
            name="Script",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "script_name",
                    models.CharField(
                        max_length=40, unique=True, verbose_name="Название скрипта"
                    ),
                ),
                (
                    "construction_script",
                    models.TextField(verbose_name="Сценарий скрипта"),
                ),
                (
                    "facility_changed_script",
                    models.TextField(verbose_name="Изменение сценария объектом"),
                ),
                (
                    "facility_process_script",
                    models.TextField(verbose_name="Процесс сценария объекта"),
                ),
                ("design_form", models.TextField(verbose_name="Дизайн формы")),
                ("script_tag_mask", models.IntegerField(verbose_name="Маска")),
                ("design_web", models.TextField(verbose_name="Дизайн веб")),
            ],
            options={
                "verbose_name": "скрипт",
                "verbose_name_plural": "скрипты",
            },
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device_id",
                    models.IntegerField(verbose_name="Идентификатор устройства"),
                ),
                (
                    "active_flange_no",
                    models.SmallIntegerField(verbose_name="Номер активного фланца"),
                ),
                (
                    "active_flange_id",
                    models.IntegerField(verbose_name="Идентификатор активного фланца"),
                ),
                (
                    "property_type_id",
                    models.IntegerField(verbose_name="Идентификатор типа свойства"),
                ),
                ("unit_id", models.IntegerField(verbose_name="Идентификатор объекта")),
                (
                    "property_path",
                    models.CharField(max_length=255, verbose_name="Пусть свойства"),
                ),
                (
                    "property_formula",
                    models.CharField(max_length=1000, verbose_name="Формула свойства"),
                ),
                ("property_factor", models.FloatField(verbose_name="Фактор свойства")),
                (
                    "property_refresh_rate",
                    models.SmallIntegerField(
                        verbose_name="Частота обновления свойства"
                    ),
                ),
                (
                    "property_process_rate",
                    models.IntegerField(verbose_name="Скорость процесса собственности"),
                ),
                (
                    "property_save_rate",
                    models.IntegerField(
                        verbose_name="Коэффициент сохранения имущества"
                    ),
                ),
                (
                    "property_desc",
                    models.CharField(max_length=1000, verbose_name="Описание свойства"),
                ),
                (
                    "property_is_fast",
                    models.BooleanField(verbose_name="Быстрое свойство"),
                ),
                (
                    "property_is_visible_form",
                    models.BooleanField(
                        verbose_name="Cвойство является видимой формой"
                    ),
                ),
                (
                    "property_is_not_calc_rate",
                    models.BooleanField(verbose_name="Свойство не рассчитано"),
                ),
                (
                    "property_is_use_active_facility_flange",
                    models.BooleanField(
                        verbose_name="Свойство использует активный фланец объекта"
                    ),
                ),
                (
                    "property_expression",
                    models.CharField(
                        max_length=1000, verbose_name="Выражение свойства"
                    ),
                ),
                (
                    "property_use_source",
                    models.BooleanField(
                        verbose_name="Источник использования имущества"
                    ),
                ),
                ("property_color", models.IntegerField(verbose_name="Цвет свойства")),
                (
                    "facility_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.facility",
                        verbose_name="Идентификатор объекта",
                    ),
                ),
            ],
            options={
                "verbose_name": "свойство",
                "verbose_name_plural": "свойства",
            },
        ),
        migrations.CreateModel(
            name="FormScript",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "design_form_facility_type",
                    models.CharField(
                        max_length=255, verbose_name="Форма конструкции тип объекта"
                    ),
                ),
                (
                    "facility_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.facility",
                        verbose_name="Идентификатор объекта",
                    ),
                ),
                (
                    "facility_type_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.facilitytype",
                        verbose_name="Идентификатор типа объекта",
                    ),
                ),
                (
                    "form_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.form",
                        verbose_name="Идентификатор формы",
                    ),
                ),
                (
                    "script_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.script",
                        verbose_name="Идентификатор скрипта",
                    ),
                ),
            ],
            options={
                "verbose_name": "сценарий формы",
                "verbose_name_plural": "сценарии формы",
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type_id",
                    models.IntegerField(verbose_name="Идентификатор типа события"),
                ),
                (
                    "event_type_base_id",
                    models.IntegerField(
                        verbose_name="Идентификатор базового типа события"
                    ),
                ),
                ("event_date", models.DateTimeField(verbose_name="Дата события")),
                ("flange_id", models.IntegerField(verbose_name="Идентификатор фланца")),
                ("flange_no", models.IntegerField(verbose_name="Номер фланцацц")),
                (
                    "property_id",
                    models.IntegerField(verbose_name="Идентификатор свойства"),
                ),
                ("property_value", models.FloatField(verbose_name="Кол-во свойств")),
                (
                    "event_date_confirm",
                    models.DateTimeField(verbose_name="Дата подтверждения события"),
                ),
                (
                    "facility_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="server.facility",
                        verbose_name="Идентификатор свойства",
                    ),
                ),
            ],
            options={
                "verbose_name": "событие",
                "verbose_name_plural": "события",
            },
        ),
    ]
